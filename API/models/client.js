import dotenv from 'dotenv';  // Charger les variables d'environnement
import { Sequelize } from 'sequelize';  // Importer Sequelize

dotenv.config();  // Charger les variables d'environnement du fichier .env

// Cr√©er une nouvelle instance de Sequelize pour se connecter √† la base de donn√©es
const sequelize = new Sequelize(
  process.env.DB_NAME,  
  process.env.DB_USER,  
  process.env.DB_PASSWORD,  
  {
    host: process.env.DB_HOST,  
    dialect: 'postgres',  
    port: process.env.DB_PORT,  
    logging: false,
  }
);

// Fonction pour se connecter √† la base de donn√©es
const connectToDatabase = async () => {
  try {
    await sequelize.authenticate();  // Authentifier la connexion √† la base de donn√©es
    console.log(`üöÄ Connexion √† la base de donn√©es ${process.env.DB_NAME} r√©ussie !`);
  } catch (error) {
    console.error(`‚ùå Impossible de se connecter √† la base de donn√©es ${process.env.DB_NAME} : ${error.message}`);
  }
};


// Lancer la connexion
connectToDatabase();

export default sequelize;